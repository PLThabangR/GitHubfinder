{"version":3,"sources":["Context/github/gitHubState.js","Components/Layout/Navbar.js","Context/github/githubContext.js","Context/AlertContext/AlertContext.js","Components/User/Search.js","Components/User/UserItem.js","Components/Layout/spinner.js","Components/User/Users.js","Components/Pages/Home.js","Components/Layout/Alert.js","Components/Pages/About.js","Components/Repos/RepoItem.js","Components/Repos/Repos.js","Components/User/User.js","Context/github/githubReducer.js","Context/types.js","Context/AlertContext/AlertReducer.js","Context/AlertContext/AlertState.js","Components/Pages/NotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["githubClientId","githubClientSecret","NavbarPage","state","isOpen","toggleCollapse","setState","color","dark","expand","className","onClick","this","id","navbar","left","active","to","right","fab","icon","Component","githubContext","createContext","alertContext","FormPage","useContext","GithubContext","Alertcontext","useState","text","setText","md","onSubmit","e","preventDefault","setAlert","searchUsers","label","type","validate","error","success","name","value","onChange","target","block","outline","far","users","length","clearUsers","CardExample","user","style","maxWidth","src","avatar_url","waves","login","bio","SpinnerPage","alignContent","role","userStyle","display","gridTemplateColumns","gridGap","Users","loading","map","UserItem","key","Home","Search","AlertPage","alert","AlertContext","msg","About","RepoItem","repo","href","html_url","Repos","repos","User","match","getSingleUser","getUserRepos","useEffect","params","blog","location","followers","following","public_repos","public_gists","company","hiraeble","wide","cascade","hover","overlay","alt","width","height","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","userName","a","setloading","axios","get","res","data","items","Provider","children","AlertState","AlertReducer","setTimeout","NotFound","App","Navbar","title","Alert","exact","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.30e08d0c.chunk.js","sourcesContent":["import React ,{useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport GithubReducer from './githubReducer';\r\nimport {SEARCH_USERS,\r\n    GET_USER,\r\n    GET_REPOS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,} from '../types';\r\nimport githubContext from './githubContext';\r\n\r\n//Initialise github client ID\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif(process.env.NODE_ENV !=='production'){\r\n    githubClientId= process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n    githubClientSecret= process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n\r\n\r\n}else{\r\n    githubClientId= process.env.GITHUB_CLIENT_ID;\r\n    githubClientSecret= process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\n    //Create initial state\r\n    const GithubState =props =>{\r\n        const initialState={\r\n            users:[],\r\n            user:{},\r\n            repos:[],\r\n            loading:false\r\n\r\n        }\r\n\r\n        const [state,dispatch] = useReducer(GithubReducer,initialState);\r\n        //Search users\r\n        const searchUsers =async userName=>{\r\n  \r\n            setloading();\r\n            \r\n            const res= await axios.get(`https://api.github.com/search/users?q=${userName}&client_id=${githubClientId} &\r\n            client_secret=${githubClientSecret}`);\r\n            \r\n           dispatch({\r\n            type:SEARCH_USERS,\r\n            payload:res.data.items\r\n\r\n           })\r\n           \r\n          }\r\n\r\n        //get user\r\n        const getSingleUser =async (userName) =>{\r\n            setloading();\r\n            \r\n            const res= await axios.get(`https://api.github.com/users/${userName}?&client_id=${githubClientId} &\r\n            client_secret=${githubClientSecret}`);\r\n            \r\n          dispatch({\r\n              type: GET_USER,\r\n              payload :res.data\r\n          })\r\n             \r\n          }\r\n        //get repos\r\n        const getUserRepos =async (userName) =>{\r\n            setloading();\r\n          \r\n            const res= await axios.get(`https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${githubClientId} &\r\n            client_secret=${githubClientSecret}`);\r\n           dispatch({\r\n               type:GET_REPOS,\r\n               payload :res.data\r\n           })\r\n          }\r\n          \r\n\r\n        //clear Users\r\n        const clearUsers=()=> dispatch({type:CLEAR_USERS})\r\n\r\n          \r\n\r\n        //set loading\r\n        const setloading =() => dispatch({type:SET_LOADING});\r\n\r\n        return <githubContext.Provider\r\n        value={{\r\n            users:state.users,\r\n            user:state.user,\r\n            repos:state.repos,\r\n            loading:state.loading,\r\n            searchUsers,\r\n            clearUsers,\r\n            getSingleUser,\r\n            getUserRepos\r\n\r\n\r\n        }}\r\n        >\r\n        {props.children}\r\n        </githubContext.Provider>\r\n    }\r\n\r\n    export default GithubState;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon } from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n  \r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">GitHub finder</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/About\">About</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"#!\">Pricing</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n           \r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"twitter\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"google-plus-g\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n           \r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;\r\n","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\n\r\n\r\nexport default githubContext;","import {createContext} from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\n\r\n\r\nexport default alertContext;","import React, {useState,useContext} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\r\nimport GithubContext from '../../Context/github/githubContext';\r\nimport Alertcontext from '../../Context/AlertContext/AlertContext';\r\nconst FormPage =()=> {\r\n\r\n  const githubContext =useContext(GithubContext);\r\n  const alertContext  =useContext(Alertcontext)\r\n  const[text,setText] =useState('');\r\n \r\nconst onChange=(e)=>{\r\nsetText(e.target.value);\r\n}\r\n\r\nconst onSubmit =(e)=>{\r\n  e.preventDefault();\r\n  if(text===''){\r\n   alertContext.setAlert('Please enter something');\r\n  \r\n  }else{\r\n    githubContext.searchUsers(text);\r\n    setText('');\r\n}\r\n}\r\n\r\nreturn (\r\n<MDBContainer>\r\n  <MDBRow>\r\n    <MDBCol md=\"12\">\r\n      <form  onSubmit={onSubmit}>\r\n      \r\n        <div className=\"grey-text\">\r\n          <MDBInput label=\"Search github users\" icon=\"user\"  type=\"text\" validate error=\"wrong\"\r\n            success=\"right\"  name=\"text\" value={text} onChange={onChange} />\r\n        \r\n        </div>\r\n        <div className=\"text-center\">\r\n          <MDBBtn block outline color=\"info\" value=\"search\" type=\"submit\">\r\n            Search\r\n            <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\r\n          </MDBBtn>\r\n        </div>\r\n      </form>\r\n      <br></br>\r\n      {githubContext.users.length > 0 && (\r\n\r\n        <div className=\"text-center\">\r\n        <MDBBtn block outline color=\"info\"  onClick={githubContext.clearUsers}>\r\n          Clear\r\n          <MDBIcon far icon=\"window-minimize\"  className=\"ml-1\" />\r\n        </MDBBtn>\r\n        <br></br>\r\n      </div>\r\n      \r\n      )}\r\n     \r\n\r\n    </MDBCol>\r\n  </MDBRow>\r\n</MDBContainer>\r\n);\r\n  }\r\n\r\n\r\nexport default FormPage;","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport {Link} from 'react-router-dom';\r\nconst CardExample = ({user}) => {\r\n  \r\n  return (\r\n    <MDBCol style={{ maxWidth: \"22rem\" }} >\r\n      <MDBCard>\r\n        <MDBCardImage  className=\"img-fluid\" src={user.avatar_url} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{user.login}</MDBCardTitle>\r\n          <MDBCardText>{user.bio}</MDBCardText>\r\n         \r\n          <Link  to={`/User/${user.login}`}>\r\n          <MDBBtn >\r\n          More info\r\n          </MDBBtn>\r\n          </Link>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default CardExample;","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n  return (\r\n    <>\r\n      <div style={{alignContent:\"center\"}} className=\"spinner-grow text-primary \" role=\"status\">\r\n\r\n      </div>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpinnerPage;","import React, { useContext } from 'react'\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../Layout/spinner'\r\nimport GithubContext from '../../Context/github/githubContext';\r\n\r\n const Users =()=> {\r\n   const githubContext = useContext(GithubContext);\r\n    //Destruct the context api\r\n    const {loading,users} =githubContext;\r\n\r\n    if(loading){\r\n        return <Spinner/>\r\n    }else{\r\n        return (\r\n            <div style={userStyle}>\r\n\r\n                {users.map(\r\n                    user =>\r\n                    <UserItem key={user.id} user={user} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n       \r\n    }\r\n\r\n    // Users.PropTypes= {\r\n    //     users:PropTypes.array.isRequired,\r\n    //     loading:Prototype.bool.isRequired\r\n    // }\r\nconst userStyle ={\r\n    display:'grid',\r\n    gridTemplateColumns:'repeat(3,1fr)',\r\n    gridGap:'1rem'\r\n}\r\nexport default Users\r\n","import React,{Fragment} from 'react'\r\nimport Search from '../User/Search';\r\nimport Users from '../User/Users';\r\nconst Home = () => {\r\n    return (\r\n        <Fragment>\r\n            <Search/>\r\n            <Users/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React,{useContext} from \"react\";\r\nimport { MDBContainer, MDBAlert } from 'mdbreact';\r\nimport AlertContext from '../../Context/AlertContext/AlertContext';\r\nconst AlertPage = () => {\r\n  const alertContext =useContext(AlertContext);\r\n\r\n  const {alert} =alertContext\r\n  return (\r\n      alert !==  null && (\r\n    <MDBContainer>\r\n      \r\n      <MDBAlert color=\"danger\" >\r\n     \r\n        {alert.msg}\r\n      </MDBAlert>\r\n      \r\n    </MDBContainer>\r\n      )\r\n  );\r\n};\r\n\r\nexport default AlertPage;","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <p>This app was created to help interact with the github Api</p> \r\n            <p>This is a purely react app designed using bootstrap material </p>\r\n            <p>Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React,{Fragment} from 'react'\r\nimport {  MDBCard, MDBCardBody, MDBCardText } from 'mdbreact';\r\nconst RepoItem = ({repo}) => {\r\n    return (\r\n        <Fragment>\r\n        <MDBCard>\r\n        <MDBCardBody>\r\n        <MDBCardText>\r\n        <a href={repo.html_url}>{repo.name} </a>\r\n        </ MDBCardText>\r\n        </MDBCardBody>\r\n        </MDBCard>\r\n            <br></br>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RepoItem\r\n","import React from 'react'\r\nimport RepoItem from './RepoItem'\r\n\r\n\r\nconst Repos = ({repos}) => {\r\n    return repos.map(repo => <RepoItem  repo={repo} key={repo.id}/> )\r\n}\r\n\r\nexport default Repos\r\n","import React, { useEffect, Fragment,useContext } from 'react'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBView, MDBIcon } from 'mdbreact';\r\nimport Spinner from \"./../Layout/spinner\";\r\nimport {Link} from 'react-router-dom';\r\nimport Repos from '../Repos/Repos';\r\nimport { MDBBadge } from \"mdbreact\";\r\nimport GithubContext from '../../Context/github/githubContext';\r\n\r\nconst User =({match})=> {\r\n  const githubContext = useContext(GithubContext);\r\n  //Destructure the context\r\n  const {getSingleUser,loading,user,getUserRepos,repos} = githubContext;\r\n  useEffect(()=>{\r\n   //fetching the single user using passed params\r\n   getSingleUser(match.params.login);\r\n  \r\n   getUserRepos(match.params.login);\r\n\r\n\r\n  },[]);\r\n    \r\n        const {\r\n            name,\r\n            avatar_url,\r\n            bio,\r\n            blog,\r\n            login,\r\n            location,\r\n            html_url,\r\n            followers,\r\n            following,\r\n            public_repos,\r\n            public_gists,\r\n            company,\r\n            hiraeble\r\n        } = user;\r\n\r\n          \r\n    \r\n         \r\n        if(loading ) return <Spinner/>;\r\n        return (\r\n            <Fragment>\r\n            <MDBBtn >\r\n            <Link to={\"/\"}>\r\n            Back to search\r\n            </Link>\r\n            </MDBBtn>\r\n            <MDBCard wide cascade>\r\n          \r\n        <div className=\"row\">\r\n               <div className=\"col-md-4\">\r\n               <MDBView cascade>\r\n               <MDBCardImage className='text-center'\r\n                 hover\r\n                 overlay='white-slight'\r\n                 className='card-img-top'\r\n                 src={avatar_url}\r\n        \r\n                 alt=\"Responsive image\"\r\n               style={{width:'300px',height:'300px'}}\r\n               />\r\n             </MDBView>\r\n               </div>\r\n               <div className=\"col-md-8\">     \r\n            <MDBCardBody cascade className='text-center'>\r\n              <MDBCardTitle className='card-title'>\r\n                <strong>{name}</strong>\r\n              </MDBCardTitle>\r\n  \r\n              <p className='font-weight-bold blue-text'>{login}</p>\r\n  \r\n              <MDBCardText>\r\n               {bio}\r\n              </MDBCardText>\r\n              <MDBCardText>\r\n              Hireable {\" \"}\r\n              {hiraeble ?<MDBIcon icon=\"calendar-check\" />\r\n            :<MDBIcon icon=\"times-circle\" />}\r\n              </MDBCardText>\r\n              \r\n              <MDBCardText>\r\n            {location && (\r\n                <Fragment>\r\n                {location}\r\n                </Fragment>\r\n                )}\r\n             </MDBCardText>\r\n             \r\n             <MDBCardText>\r\n                {company && <Fragment>\r\n                    <strong>Campany name: </strong>\r\n                        {company}\r\n                </Fragment>\r\n                }\r\n                </MDBCardText>\r\n                <MDBCardText>\r\n                {blog && <Fragment>\r\n                    <strong>Website: </strong>\r\n                        {blog}\r\n                </Fragment>\r\n                }\r\n                </MDBCardText>\r\n              \r\n             \r\n            <MDBBtn  href={html_url} >\r\n            \r\n           \r\n           \r\n            Visit github proflie\r\n        \r\n            </MDBBtn>\r\n\r\n\r\n              </MDBCardBody>\r\n              </div>\r\n              </div>\r\n              </MDBCard>\r\n            \r\n                <br></br>\r\n              <MDBCard>\r\n              <MDBCardBody>\r\n     \r\n              <div className=\"text-center\">\r\n              <MDBBadge color=\"primary\">Follows {'', following}</MDBBadge>\r\n              <MDBBadge color=\"success\">Followers {' ',followers}</MDBBadge>\r\n              <MDBBadge color=\"info\">Public repos {'',public_repos}</MDBBadge>\r\n              <MDBBadge color=\"warning\">public gists {'',public_gists}</MDBBadge>\r\n                </div>\r\n            \r\n              </MDBCardBody>\r\n              </MDBCard>\r\n              <br></br>\r\n              <Repos repos={repos}/>\r\n            </Fragment>\r\n        )\r\n    \r\n}\r\n\r\nexport default User\r\n","import {SEARCH_USERS,\r\n    GET_USER,\r\n    GET_REPOS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,} from '../types';\r\n\r\n\r\n    export default (state,action)=>{\r\n        switch(action.type){\r\n            case GET_REPOS:\r\n                return{\r\n                    ...state,\r\n                    repos:action.payload,\r\n                    loading:false\r\n                }\r\n            case GET_USER:\r\n                return{\r\n                    ...state,\r\n                    user:action.payload,\r\n                    loading:false\r\n                }\r\n            case CLEAR_USERS:\r\n                return{\r\n                    ...state,\r\n                    users:[],\r\n                    loading:false\r\n                }\r\n\r\n               case SEARCH_USERS:\r\n                   return{\r\n                       ...state,\r\n                       users:action.payload,\r\n                       loading:false\r\n                   } \r\n\r\n            case SET_LOADING:\r\n                return{\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n            \r\n            \r\n            default:\r\n                return  state;\r\n\r\n        }\r\n\r\n    }","export const SEARCH_USERS='SEARCH_USERS';\r\nexport const GET_USER='GET_USER';\r\nexport const GET_REPOS ='GET_REPOS';\r\nexport const SET_LOADING ='SET_LOADING';\r\nexport const SET_ALERT ='SET_ALERT';\r\nexport const REMOVE_ALERT ='REMOVE_ALERT';\r\nexport const CLEAR_USERS ='CLEAR_USERS'\r\n","import {SET_ALERT,REMOVE_ALERT} from '../types';\r\n\r\nexport default(state,action) =>{\r\n    switch( action.type){\r\n\r\n        case SET_ALERT:\r\n        return action.payload;\r\n\r\n        case REMOVE_ALERT:\r\n            return null;\r\n\r\n            default:\r\n                return state;\r\n\r\n    }\r\n}","import React ,{useReducer} from 'react';\r\nimport AlertReducer from './AlertReducer';\r\nimport {\r\n    REMOVE_ALERT,\r\n    SET_ALERT,\r\n    } from '../types';\r\nimport AlertContext from './AlertContext';\r\n\r\n    //Create initial state\r\n    const AlertState =props =>{\r\n        const initialState=null;\r\n\r\n        const [state,dispatch] = useReducer(AlertReducer,initialState);\r\n       \r\n        //set alert\r\n        const setAlert =(msg)=>{\r\n            dispatch({\r\n                type:SET_ALERT,\r\n                payload: {msg}\r\n            })\r\n\r\n            setTimeout(()=> dispatch({type:REMOVE_ALERT}),5000)\r\n           }\r\n           \r\n        \r\n        return <AlertContext.Provider\r\n        value={{\r\n            alert:state,\r\n            setAlert\r\n        }}\r\n        >\r\n        {props.children}\r\n        </AlertContext.Provider>\r\n    }\r\n\r\n    export default AlertState;","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n        <h1>Page not found </h1>\r\n        <p className=\"font-weight-light\">The page you looking for does not exists</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, {Fragment} from \"react\";\r\nimport \"./index.css\";\r\nimport Navbar from \"./Components/Layout/Navbar\";\r\nimport Home from './Components/Pages/Home';\r\nimport Alert from './Components/Layout/Alert';\r\nimport About from './Components/Pages/About';\r\nimport User from './Components/User/User';\r\nimport GithubState from './Context/github/gitHubState';\r\nimport AlertState from './Context/AlertContext/AlertState';\r\nimport  {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport NotFound from \"./Components/Pages/NotFound\";\r\nconst  App =()=> {\r\n\r\n \r\n\r\n\r\n    return (\r\n      <GithubState>\r\n      <AlertState>\r\n      <Router>\r\n      <Fragment>\r\n      <Navbar  title=\"Github finder\"/>\r\n      <div className=\"container mt-2\">\r\n      <Alert/>\r\n     <Switch>\r\n     <Route exact path='/' \r\n      component={Home} />\r\n\r\n      <Route\r\n        exact\r\n        path='/About'\r\n         component={About}/>\r\n\r\n      <Route exact path='/User/:login' \r\n        component ={User} \r\n     />\r\n\r\n     <Route component={NotFound}/>\r\n\r\n     </Switch>\r\n         \r\n       </div>\r\n      </Fragment>\r\n      </Router>\r\n      </AlertState>\r\n      </GithubState>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}